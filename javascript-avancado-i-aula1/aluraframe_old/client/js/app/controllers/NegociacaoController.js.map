{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","Negociacao","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","value","focus","textoParaData","parseInt","parseFloat","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","apaga","esvazia","importa"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from '../models/ListaNegociacoes';\nimport {Mensagem} from '../models/Mensagem';\nimport {NegociacoesView} from '../views/NegociacoesView';\nimport {MensagemView} from '../views/MensagemView';\nimport {NegociacaoService} from '../services/NegociacaoService';\nimport {DateHelper} from '../helpers/DateHelper';\nimport {Bind} from '../helpers/Bind';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoController {\n\n\n    constructor(){        \n\n        let $ = document.querySelector.bind(document);\n\n        this._inputData = $('#data');\n        this._inputQuantidade =  $('#quantidade');\n        this._inputValor = $('#valor');\n\n        this._listaNegociacoes = new Bind (\n                new ListaNegociacoes(),\n                new NegociacoesView($('#negociacoesView')),\n                'adiciona', 'esvazia');\n\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView($('#mensagemView')),\n            'texto');\n\n        this._service = new NegociacaoService();    \n\n        this._init();\n\n    }\n        \n    _init(){\n\n        this._service\n        .lista()\n        .then(negociacoes =>\n            negociacoes.forEach(negociacao =>\n                this._listaNegociacoes.adiciona(negociacao)))\n        .catch(erro => this._mensagem.texto = erro);\n\n\n        /*\n        setInterval(() => {\n            this.importaNegociacoes();\n        }, 3000);\n        */\n\n    }\n\n    _limpaFormulario() {\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0\n\n        this._inputData.focus();\n    }\n\n    _criaNegociacao() {\n\n        return new Negociacao(\n              DateHelper.textoParaData(this._inputData.value),\n              parseInt(this._inputQuantidade.value),\n              parseFloat(this._inputValor.value)\n            );\n    }        \n\n    adiciona(event) {\n\n        event.preventDefault();\n\n        let negociacao = this._criaNegociacao();\n\n        this._service\n            .cadastra(negociacao)\n            .then(mensagem => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = mensagem; \n                this._limpaFormulario();  \n            }).catch(erro => this._mensagem.texto = erro);\n    }\n\n    apaga() {\n\n        this._service\n        .apaga()\n        .then(mensagem => {\n            this._mensagem.texto = mensagem;\n            this._listaNegociacoes.esvazia();\n        })\n        .catch(erro => this._mensagem.texto = erro);\n\n    }\n/* \n    importaNegociacoes() {\n\n        let service = this._service;\n\n        Promise.all([\n            service.obterNegociacoes('negociacoes/semana'),\n            service.obterNegociacoes('negociacoes/anterior'),\n            service.obterNegociacoes('negociacoes/retrasada')            \n        ])\n        .then(negociacoes =>\n            negociacoes.filter(negociacao =>\n                !this._listaNegociacoes.negociacoes.some(negociacaoExistente =>\n                    JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\n        )\n        .then(negociacoes => {\n            negociacoes\n                .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\n                .forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n            this._mensagem.texto = 'Negociações importadas com sucesso';\n        })\n        .catch(erro => this._mensagem.texto = erro);   \n      \n    }\n */\n\n    importaNegociacoes() {\n\n        this._service\n            .importa(this._listaNegociacoes.negociacoes)\n            .then(negociacoes => negociacoes.forEach(negociacao => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = 'Negociações do período importadas'\n            }))\n            .catch(erro => this._mensagem.texto = erro);\n    }\n\n}"]}